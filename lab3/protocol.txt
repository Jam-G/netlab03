本协议定义客户端服务器之间的通信过程.定义了
注册/登录/登出/显示当前在线用户及状态/发起or接受挑战/对战/留言/排行榜查询
共8个过程中的通信定义.
1.协议头(Header)
	协议头部分为id和type两个字段.
	id由一次通信过程的发起者指定,唯一标识一次通信过程.
	同一次通信过程的往返数据使用同一个id.
	type用于表示通信类型,也同时说明了后续的数据大小type共有12种.
	分别是:SGP/RSP/SIN/RIN/SOT/UPD/CHL/RCH/FGT/ANS/END/MSG/TOP.
	协议头结构如下:
	   4	4
	| id | type |

2.注册
	注册会话由客户端发起,服务器处理后进行返回结果.共2次通信.
	第一次:客户度向服务器发出type为SGP的数据包,并包含使用的用户名及密码.
			8		16		16
		| header | name | password |

	第二次:服务器处理后向客户端返回type为RSP的数据,并返回结果,用一个字节表示注册结果为:
		S:成功	F:失败(已注册)
			8		1
		| header | answer |

3.登录
	登录会话由客户端发起.服务器处理并响应,共2次通信
	第一次:客户端发起登录请求type为SIN,并附上自己的用户名和密码.
			8		16		16
		| header | name | password |

	第二次:服务器校验密码后返回登录结果,type为RIN,使用一个字节表示登录结果:
		S:成功	F:密码错误	A:已经登录
			8		1
		| header | answer |

4.登出
	登出会话由客户端发起,服务器默认不返回结果,单向一次通信
	客户端发起type为SOT类型的数据,并附上自己的用户名.服务器接收并将其下线
			8		16
		| header | name |

5.显示当期在线用户及状态
	服务器主动推送type为UDP类型的当前在线列表以及状态.用户名name及其状态state表示,state有两种,F:空闲;B:对战中;
	
		8		16		1
	| header | name | state |
	
	length 表示state组的个数.用int表示
	或者在用户登录之后主动发送type为GET类型的报文来获取所有列表.
		8		4			16		1
	| header | length / | name | state |/

6.挑战
	挑战会话由一方发起,服务器通知另一方,可以选择接收或拒绝,共涉及两个用户共4次通信
	第一次:A向服务器发起挑战, type为CHL
	第二次:服务器向B转发挑战,type为CHL
	第三次:B回复结果,type为RCH
	第四次:服务器向A反馈结果,type为RCH
	本部分采用的协议结构如下:
			8			  16		      16			1
		| header | initiator | recipient | state |
	state: 'A':accept : 'R':refuse

7.对战
	对战中,对战双方向服务器发送自己的出拳,然后等待结果,结果可能是自己的本次输赢以及血量
	变化,或者收到对战结束的最终裁定.
	step : Y:剪刀 O:包袱 P:锤子
	出拳的数据结构如下,type为FGT:
			8			16		 1
		| header | name | step |

	若本次未能结束,则收到一次的裁定,type为ANS:
			8			1		4
		| header | ans | blood |

	若本次结束了游戏,则收到的是最终的裁定,type为END:
			8		1
		| header | ans |

8.留言
	留言由一方向服务器发送,服务器推送给另一方.type为MSG, 共2个用户,2次通信
	留言的协议格式为:
			8		16			16		128
		| header | sender | reciver | mesg |

9.排行榜
	排行榜由客户端发起查询,服务器返回结果,共2次通信,type为TOP
	查询过程协议结构为:
			8
		| header |

	服务器返回的结果为:
			8		10*20
		| header | tops |

	其中tops为10组top10的用户名及胜利数,结构如下:
			16		4
		| name | victory |
